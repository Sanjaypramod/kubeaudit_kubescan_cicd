version: '2.1'

orbs:
  terraform: circleci/terraform@3.2.1

jobs:
  kube_audit:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: Update and Install Dependencies
          command: |
            apt-get update && apt-get install -y curl tar
      - run:
          name: Install KubeAudit
          command: |
            curl -L "https://github.com/Shopify/kubeaudit/releases/latest/download/kubeaudit_$(uname -s)_$(uname -m).tar.gz" -o kubeaudit.tar.gz
            echo "Downloaded file contents:"
            cat kubeaudit.tar.gz
            if file kubeaudit.tar.gz | grep -q 'gzip compressed data'; then
              tar -xzvf kubeaudit.tar.gz
              mv kubeaudit /usr/local/bin/
            else
              echo "The downloaded file is not a gzip archive. Exiting..."
              exit 1
      - run:
          name: Run KubeAudit and check for failure
          command: |
            kubeaudit all > kubeaudit_output.txt 2>&1
            KUBEAUDIT_EXIT_CODE=$?
            
            if [ $KUBEAUDIT_EXIT_CODE -ne 0 ]; then
              echo "Sending failure notification email..."
              curl -X POST -H "Authorization: Bearer $EMAIL_SERVICE_API_KEY" \
                   -H "Content-Type: application/json" \
                   -d '{
                         "personalizations": [{"to": [{"email": "'$KUBE_AUDIT_NOTIFICATION_EMAIL'"}]}],
                         "from": {"email": "sanjay.pramod@urolime.com"},
                         "subject": "KubeAudit Failure Notification",
                         "content": [{"type": "text/plain", "value": "KubeAudit encountered errors. Please check the CircleCI logs for more details."}]
                       }' \
                   $EMAIL_SERVICE_API_URL
            fi
            
            exit $KUBEAUDIT_EXIT_CODE

workflows:
  version: 2
  deploy_infra:
    jobs:
      - terraform/validate:
          checkout: true
          context: terraform
      - terraform/plan:
          checkout: true
          context: terraform
          persist-workspace: true
          requires:
            - terraform/validate
      - kube_audit:
          requires:
            - terraform/plan
      - hold-apply:
          type: approval
          requires:
            - kube_audit
      - terraform/apply:
          attach-workspace: true
          context: terraform
          filters:
            branches:
              only: master
          requires:
            - hold-apply
